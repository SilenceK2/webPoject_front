{"ast":null,"code":"import api from \"../api/Instance\";\n\n/**\r\n * todoPage에서 전체 테이블 가져오기\r\n * @get\r\n * @success\r\n */\nconst getTodoListAllTable = async () => {\n  try {\n    const response = await api.get(\"/todolist/alllist\");\n    const result = response.data;\n    console.log(result);\n    if (response.data.success) {\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false\n      };\n    }\n  } catch (error) {\n    console.error(\"error:\", error);\n    return {\n      success: false,\n      error: \"글 불러오기 실패\"\n    };\n  }\n};\n\n/**\r\n * 홈에서 날짜 선택후 투두리스트 생성\r\n * @post\r\n * @param title\r\n * @param content\r\n * @param member\r\n * @param selectedTodoId\r\n * @success\r\n * @todo memberemail값 보내기 테스트중\r\n */\nconst createTodoList = async useremail => {\n  try {\n    const response = await api.post(\"/todolist/create\", {\n      todoEmail: useremail\n    });\n    if (response.data.success) {\n      console.log(response.data);\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false\n      };\n    }\n  } catch (error) {\n    console.error(\"error:\", error);\n    return {\n      success: false,\n      error: \"전송 실패\"\n    };\n  }\n};\n\n/**\r\n * 홈에서 날짜 선택후 투두리스트 삭제\r\n * @post\r\n * @param selectedTodoId\r\n * @success\r\n */\nconst deleteTodoList = async selectedTodoId => {\n  try {\n    const response = await api.post(\"/todolist/delete\", {\n      selectedTodoId\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error(\"error:\", error);\n    return {\n      success: false,\n      error: \"삭제 실패\"\n    };\n  }\n};\n/**\r\n * 홈에서 날짜 선택후 투두리스트 수정(update)\r\n * @post\r\n * @param title\r\n * @param Content\r\n * @param member\r\n * @param selectedTodoId\r\n * @success\r\n */\nconst updateTodoList = async (title, content, member, selectedTodoId) => {\n  try {\n    const response = await api.post(\"/todolist/update\", {\n      title,\n      content,\n      member,\n      selectedTodoId\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error(\"error:\", error);\n    return {\n      success: false,\n      error: \"수정 실패\"\n    };\n  }\n};\nexport { createTodoList, deleteTodoList, updateTodoList, getTodoListAllTable };","map":{"version":3,"names":["api","getTodoListAllTable","response","get","result","data","console","log","success","error","createTodoList","useremail","post","todoEmail","deleteTodoList","selectedTodoId","updateTodoList","title","content","member"],"sources":["C:/Users/정재승/Desktop/202230233_03-01/webproject/Capston_front/src/utils/apimodule/todolist.jsx"],"sourcesContent":["import api from \"../api/Instance\";\r\n\r\n/**\r\n * todoPage에서 전체 테이블 가져오기\r\n * @get\r\n * @success\r\n */\r\nconst getTodoListAllTable = async () => {\r\n  try {\r\n    const response = await api.get(\"/todolist/alllist\");\r\n    const result = response.data;\r\n    console.log(result);\r\n    if (response.data.success) {\r\n      return { success: true };\r\n    } else {\r\n      return { success: false };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"error:\", error);\r\n    return { success: false, error: \"글 불러오기 실패\" };\r\n  }\r\n};\r\n\r\n/**\r\n * 홈에서 날짜 선택후 투두리스트 생성\r\n * @post\r\n * @param title\r\n * @param content\r\n * @param member\r\n * @param selectedTodoId\r\n * @success\r\n * @todo memberemail값 보내기 테스트중\r\n */\r\nconst createTodoList = async (useremail) => {\r\n  try {\r\n    const response = await api.post(\"/todolist/create\", {\r\n      todoEmail: useremail,\r\n    });\r\n    if (response.data.success) {\r\n      console.log(response.data);\r\n\r\n      return { success: true };\r\n    } else {\r\n      return { success: false };\r\n    }\r\n  } catch (error) {\r\n    console.error(\"error:\", error);\r\n    return { success: false, error: \"전송 실패\" };\r\n  }\r\n};\r\n\r\n/**\r\n * 홈에서 날짜 선택후 투두리스트 삭제\r\n * @post\r\n * @param selectedTodoId\r\n * @success\r\n */\r\nconst deleteTodoList = async (selectedTodoId) => {\r\n  try {\r\n    const response = await api.post(\"/todolist/delete\", {\r\n      selectedTodoId,\r\n    });\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"error:\", error);\r\n    return { success: false, error: \"삭제 실패\" };\r\n  }\r\n};\r\n/**\r\n * 홈에서 날짜 선택후 투두리스트 수정(update)\r\n * @post\r\n * @param title\r\n * @param Content\r\n * @param member\r\n * @param selectedTodoId\r\n * @success\r\n */\r\nconst updateTodoList = async (title, content, member, selectedTodoId) => {\r\n  try {\r\n    const response = await api.post(\"/todolist/update\", {\r\n      title,\r\n      content,\r\n      member,\r\n      selectedTodoId,\r\n    });\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"error:\", error);\r\n    return { success: false, error: \"수정 실패\" };\r\n  }\r\n};\r\n\r\nexport { createTodoList, deleteTodoList, updateTodoList, getTodoListAllTable };\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,iBAAiB;;AAEjC;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,mBAAmB,CAAC;IACnD,MAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAI;IAC5BC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnB,IAAIF,QAAQ,CAACG,IAAI,CAACG,OAAO,EAAE;MACzB,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,MAAM;MACL,OAAO;QAAEA,OAAO,EAAE;MAAM,CAAC;IAC3B;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAY,CAAC;EAC/C;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAG,MAAOC,SAAS,IAAK;EAC1C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMF,GAAG,CAACY,IAAI,CAAC,kBAAkB,EAAE;MAClDC,SAAS,EAAEF;IACb,CAAC,CAAC;IACF,IAAIT,QAAQ,CAACG,IAAI,CAACG,OAAO,EAAE;MACzBF,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACG,IAAI,CAAC;MAE1B,OAAO;QAAEG,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,MAAM;MACL,OAAO;QAAEA,OAAO,EAAE;MAAM,CAAC;IAC3B;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC;EAC3C;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMK,cAAc,GAAG,MAAOC,cAAc,IAAK;EAC/C,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMF,GAAG,CAACY,IAAI,CAAC,kBAAkB,EAAE;MAClDG;IACF,CAAC,CAAC;IACF,OAAO;MAAEP,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC;EAC3C;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMO,cAAc,GAAG,MAAAA,CAAOC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEJ,cAAc,KAAK;EACvE,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMF,GAAG,CAACY,IAAI,CAAC,kBAAkB,EAAE;MAClDK,KAAK;MACLC,OAAO;MACPC,MAAM;MACNJ;IACF,CAAC,CAAC;IACF,OAAO;MAAEP,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9B,OAAO;MAAED,OAAO,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC;EAC3C;AACF,CAAC;AAED,SAASC,cAAc,EAAEI,cAAc,EAAEE,cAAc,EAAEf,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}