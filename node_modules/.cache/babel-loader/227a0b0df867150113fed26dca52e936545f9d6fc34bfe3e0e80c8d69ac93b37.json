{"ast":null,"code":"import axios from \"axios\";\n\n/**\r\n * openWeatherMap에서 온도, 날씨를 받아오는 get요청\r\n * @param {*} latitude\r\n * @param {*} longitude\r\n * @returns\r\n */\nexport const getWeatherByCurrentLocation = async (latitude, longitude) => {\n  try {\n    const params = {\n      lang: \"kr\",\n      units: \"metric\"\n    };\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=da9897716f54b1cd0575e31e83da8bcb&units=metric`;\n    const response = await axios.get(url, {\n      params\n    });\n    const data = response.data;\n    const tempMin = data.main.temp_min;\n    const tempMax = data.main.temp_max;\n    const temp = data.main.temp;\n    const icon = data.weather[0].icon;\n    const condition = data.weather[0].main;\n    const title = data.name;\n    const rainCondition = data.rain;\n    console.log(response.data);\n    console.log(\"최고기온값:\", tempMin);\n    console.log(\"최저기온값:\", tempMax);\n    console.log(\"날씨: \", condition);\n    console.log(\"지역: \", title);\n    return {\n      success: true,\n      temp,\n      tempMin,\n      tempMax,\n      condition,\n      icon,\n      title,\n      rainCondition\n    };\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n};","map":{"version":3,"names":["axios","getWeatherByCurrentLocation","latitude","longitude","params","lang","units","url","response","get","data","tempMin","main","temp_min","tempMax","temp_max","temp","icon","weather","condition","title","name","rainCondition","rain","console","log","success","error"],"sources":["C:/Users/정재승/Desktop/202230233_03-01/webproject/Capston_front/src/utils/apimodule/wheater.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\n/**\r\n * openWeatherMap에서 온도, 날씨를 받아오는 get요청\r\n * @param {*} latitude\r\n * @param {*} longitude\r\n * @returns\r\n */\r\nexport const getWeatherByCurrentLocation = async (latitude, longitude) => {\r\n  try {\r\n    const params = {\r\n      lang: \"kr\",\r\n      units: \"metric\",\r\n    };\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=da9897716f54b1cd0575e31e83da8bcb&units=metric`;\r\n    const response = await axios.get(url, { params });\r\n\r\n    const data = response.data;\r\n\r\n    const tempMin = data.main.temp_min;\r\n    const tempMax = data.main.temp_max;\r\n    const temp = data.main.temp;\r\n    const icon = data.weather[0].icon;\r\n    const condition = data.weather[0].main;\r\n    const title = data.name;\r\n    const rainCondition = data.rain;\r\n    console.log(response.data);\r\n\r\n    console.log(\"최고기온값:\", tempMin);\r\n    console.log(\"최저기온값:\", tempMax);\r\n    console.log(\"날씨: \", condition);\r\n    console.log(\"지역: \", title);\r\n\r\n    return {\r\n      success: true,\r\n      temp,\r\n      tempMin,\r\n      tempMax,\r\n      condition,\r\n      icon,\r\n      title,\r\n      rainCondition,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,2BAA2B,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,SAAS,KAAK;EACxE,IAAI;IACF,MAAMC,MAAM,GAAG;MACbC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE;IACT,CAAC;IACD,MAAMC,GAAG,GAAI,uDAAsDL,QAAS,QAAOC,SAAU,sDAAqD;IAClJ,MAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACF,GAAG,EAAE;MAAEH;IAAO,CAAC,CAAC;IAEjD,MAAMM,IAAI,GAAGF,QAAQ,CAACE,IAAI;IAE1B,MAAMC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAACC,QAAQ;IAClC,MAAMC,OAAO,GAAGJ,IAAI,CAACE,IAAI,CAACG,QAAQ;IAClC,MAAMC,IAAI,GAAGN,IAAI,CAACE,IAAI,CAACI,IAAI;IAC3B,MAAMC,IAAI,GAAGP,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI;IACjC,MAAME,SAAS,GAAGT,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACN,IAAI;IACtC,MAAMQ,KAAK,GAAGV,IAAI,CAACW,IAAI;IACvB,MAAMC,aAAa,GAAGZ,IAAI,CAACa,IAAI;IAC/BC,OAAO,CAACC,GAAG,CAACjB,QAAQ,CAACE,IAAI,CAAC;IAE1Bc,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEd,OAAO,CAAC;IAC9Ba,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEX,OAAO,CAAC;IAC9BU,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEN,SAAS,CAAC;IAC9BK,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEL,KAAK,CAAC;IAE1B,OAAO;MACLM,OAAO,EAAE,IAAI;MACbV,IAAI;MACJL,OAAO;MACPG,OAAO;MACPK,SAAS;MACTF,IAAI;MACJG,KAAK;MACLE;IACF,CAAC;EACH,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}